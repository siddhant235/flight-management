version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app_network

  postgres:
    image: postgres:12.2-alpine
    container_name: postgres_db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./backend/data/db:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin4
  #   env_file:
  #     - .env
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - ./backend/data/pgadmin:/var/lib/postgresql/data
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app_network

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app_network
    volumes:
      - ./backend:/app
  # test-runner:
  #   # ✅ Separate container for running tests
  #   build:
  #     context: ./backend
  #   env_file:
  #     - .env
  #   entrypoint: [ "/bin/sh", "-c" ]
  #   command: [ "pytest --cov=apps --cov-report=term-missing || true" ] # ✅ Runs tests without stopping other services
  #   depends_on:
  #     backend:
  #       condition: service_started # ✅ Runs after backend starts
  #   networks:
  #     - app_network
  #   volumes:
  #     - ./backend:/app

networks:
  app_network:
    driver: bridge
